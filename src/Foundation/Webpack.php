<?php

namespace Pollora\MeiliScout\Foundation;

use function wp_enqueue_script;
use function wp_enqueue_style;

/**
 * Handles Webpack integration for development and production assets.
 */
class Webpack
{
    /**
     * URL to the distribution directory.
     */
    protected string $buildUrl;

    /**
     * Path to the distribution directory.
     */
    protected string $buildPath;

    /**
     * Initializes Webpack integration with necessary paths.
     */
    public function __construct()
    {
        $this->buildPath = MEILISCOUT_DIR_PATH.'/build/';
        $this->buildUrl = MEILISCOUT_DIR_URL.'build/';
    }

    /**
     * Enqueues assets using the WordPress scripts API.
     *
     * @param  string  $handle  WordPress script handle
     * @param  string  $entry  Entry point file name without extension
     * @param  array  $dependencies  List of WordPress dependencies
     * @return void
     */
    public function enqueueAssets(string $handle, string $entry, array $dependencies = [])
    {
        // Path to the asset file generated by @wordpress/scripts
        $assetFile = $this->buildPath.$entry.'.asset.php';

        if (! file_exists($assetFile)) {
            return;
        }

        $asset = require $assetFile;

        // The asset file contains version and dependencies
        $version = $asset['version'];
        $scriptDependencies = array_merge($dependencies, $asset['dependencies']);
        // Enqueue JS
        wp_enqueue_script(
            $handle,
            $this->buildUrl.$entry.'.js',
            $scriptDependencies,
            $version,
            true
        );

        // Enqueue CSS if it exists
        $cssFile = $this->buildPath.$entry.'.css';

        if (file_exists($cssFile)) {

            wp_enqueue_style(
                $handle.'-style',
                $this->buildUrl.$entry.'.css',
                [],
                $version
            );
        }
    }
}
